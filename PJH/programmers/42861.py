def solution(n, costs):
    answer = 0

    costs.sort(key=lambda x: x[2])

    cycle = [i for i in range(n)]

    while len(set(cycle)) != 1:
        s, e, c = costs.pop(0)

        if cycle[s] == cycle[e]:
            continue

        if cycle[s] < cycle[e]:
            if cycle.count(cycle[e]) > 1:
                for i in range(n):
                    if i == e:
                        continue
                    if cycle[i] == cycle[e]:
                        cycle[i] = cycle[s]
            cycle[e] = cycle[s]
        else:
            if cycle.count(cycle[s]) > 1:
                for i in range(n):
                    if i == s:
                        continue
                    if cycle[i] == cycle[s]:
                        cycle[i] = cycle[e]
            cycle[s] = cycle[e]

        answer += c

    return answer


p = [

    [7, [[2, 3, 7], [3, 6, 13], [3, 5, 23], [5, 6, 25], [0, 1, 29], [1, 5, 34], [1, 2, 35], [4, 5, 53], [0, 4, 75]],
     159],
    [5, [[0, 1, 5], [1, 2, 3], [2, 3, 3], [3, 1, 2], [3, 0, 4], [2, 4, 6], [4, 0, 7]], 15],
    [5, [[0, 1, 1], [3, 4, 1], [1, 2, 2], [2, 3, 4]], 8],
    [4, [[0, 1, 5], [1, 2, 3], [2, 3, 3], [1, 3, 2], [0, 3, 4]], 9],
    [5, [[0, 1, 1], [3, 1, 1], [0, 2, 2], [0, 3, 2], [0, 4, 100]], 104],
    [6, [[0, 1, 5], [0, 3, 2], [0, 4, 3], [1, 4, 1], [3, 4, 10], [1, 2, 2], [2, 5, 3], [4, 5, 4]], 11],
    [5, [[0, 1, 1], [2, 3, 1], [3, 4, 2], [1, 2, 2], [0, 4, 100]], 6],
    [5, [[0, 1, 1], [0, 4, 5], [2, 4, 1], [2, 3, 1], [3, 4, 1]], 8],
    [5, [[0, 1, 1], [0, 2, 2], [0, 3, 3], [0, 4, 4], [1, 3, 1]], 8],
    [5, [[0, 1, 1], [0, 2, 2], [1, 2, 5], [1, 3, 3], [2, 3, 8], [3, 4, 1]], 7],
    [5, [[0, 1, 1], [3, 4, 1], [1, 2, 2], [2, 3, 4]], 8],
    [4, [[0, 1, 1], [0, 2, 2], [2, 3, 1]], 4]

]

for i in p:
    print(solution(i[0], i[1]) == i[2])
